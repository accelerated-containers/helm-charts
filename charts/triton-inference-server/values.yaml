# Default values for triton-inference-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas.
replicaCount: 1

# -- Arguments for the inference server pod.
args:
  - "--model-store=/models"
  - "--model-control-mode=poll"
  - "--repository-poll-secs=30"
# -- Additional environment variables for the inference server pod.
env: []
envFrom: []

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nvcr.io/nvidia/tritonserver
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "25.02-py3"

# -- Image pull secrets for Docker images.
imagePullSecrets: []
# -- Overrides the chart's name.
nameOverride: ""
# -- Overrides the chart's computed fullname.
fullnameOverride: ""

# -- Additional annotations for the pod.
podAnnotations: {}
# -- Additional labels for the pod.
podLabels: {}

podDisruptionBudget:
  # -- Specifies whether a pod disruption budget should be created
  create: false
  maxUnavailable: 1

# -- SecurityContext for the pod.
podSecurityContext:
  runAsNonRoot: true
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

securityContext:
  # -- AppArmor profile for the container.
  appArmorProfile: {}
  # -- SELinux options for the container.
  seLinuxOptions: {}
  # -- Seccomp profile for the container.
  seccompProfile: {}

service:
  # -- Additional annotations to add to the service
  annotations: {}
  type: ClusterIP
  ports:
    http: 8000
    grpc: 8001
    metrics: 8002

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Additional annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: alb
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/success-codes: "200-299"
    # alb.ingress.kubernetes.io/healthcheck-path: "/v1/health/ready"
    # alb.ingress.kubernetes.io/healthcheck-port: "8080"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    nvidia.com/gpu: 1

livenessProbe:
  httpGet:
    path: /v2/health/live
    port: http
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 5
  httpGet:
    path: /v2/health/ready
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  # https://github.com/triton-inference-server/server/blob/fd19783faa288a43522ea1a1a91d4e2b6641e598/deploy/k8s-onprem/values.yaml#L59-L84
  metrics: []
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Node selectors to schedule the pod to nodes with labels.
nodeSelector: {}

tolerations:
  - key: nvidia.com/gpu
    operator: Exists
    effect: NoSchedule
  - key: aws.amazon.com/neuron
    operator: Exists
    effect: NoSchedule

# -- Affinity rules for scheduling the pod.
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: "nvidia.com/gpu.present"
              operator: In
              values:
                - "true"
        - matchExpressions:
            - key: "aws.amazon.com/neuron.present"
              operator: In
              values:
                - "true"
